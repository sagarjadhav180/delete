<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="21" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="Automation Suite-1" duration-ms="470038" started-at="2020-05-05T06:41:23Z" finished-at="2020-05-05T06:49:13Z">
    <groups>
    </groups>
    <test name="chrome test-1" duration-ms="470038" started-at="2020-05-05T06:41:23Z" finished-at="2020-05-05T06:49:13Z">
      <class name="tests.CallLogsTest">
        <test-method status="PASS" signature="testSetUp()[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="testSetUp" is-config="true" duration-ms="20" started-at="2020-05-05T12:11:23Z" finished-at="2020-05-05T12:11:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="setUp" is-config="true" duration-ms="39728" started-at="2020-05-05T12:11:23Z" finished-at="2020-05-05T12:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://stag-5-cmo-1.convirza.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="goToLookerReports()[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="goToLookerReports" is-config="true" duration-ms="21047" started-at="2020-05-05T12:12:02Z" finished-at="2020-05-05T12:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLookerReports -->
        <test-method status="PASS" signature="headerLabelVerification()[pri:1, instance:tests.CallLogsTest@1e9e725a]" name="headerLabelVerification" duration-ms="1615" started-at="2020-05-05T12:12:24Z" finished-at="2020-05-05T12:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headerLabelVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="913" started-at="2020-05-05T12:12:25Z" finished-at="2020-05-05T12:12:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=headerLabelVerification status=SUCCESS method=CallLogsTest.headerLabelVerification()[pri:1, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="presenceOfTimeZoneVerification()[pri:2, instance:tests.CallLogsTest@1e9e725a]" name="presenceOfTimeZoneVerification" duration-ms="1320" started-at="2020-05-05T12:12:26Z" finished-at="2020-05-05T12:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- presenceOfTimeZoneVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="148" started-at="2020-05-05T12:12:27Z" finished-at="2020-05-05T12:12:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=presenceOfTimeZoneVerification status=SUCCESS method=CallLogsTest.presenceOfTimeZoneVerification()[pri:2, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="presenceOfGearIconVerification()[pri:3, instance:tests.CallLogsTest@1e9e725a]" name="presenceOfGearIconVerification" duration-ms="1191" started-at="2020-05-05T12:12:28Z" finished-at="2020-05-05T12:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- presenceOfGearIconVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="105" started-at="2020-05-05T12:12:29Z" finished-at="2020-05-05T12:12:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=presenceOfGearIconVerification status=SUCCESS method=CallLogsTest.presenceOfGearIconVerification()[pri:3, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="gearIconOptionsVerification()[pri:4, instance:tests.CallLogsTest@1e9e725a]" name="gearIconOptionsVerification" duration-ms="2634" started-at="2020-05-05T12:12:29Z" finished-at="2020-05-05T12:12:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gearIconOptionsVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="57" started-at="2020-05-05T12:12:31Z" finished-at="2020-05-05T12:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gearIconOptionsVerification status=SUCCESS method=CallLogsTest.gearIconOptionsVerification()[pri:4, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tilesVerification()[pri:5, instance:tests.CallLogsTest@1e9e725a]" name="tilesVerification" duration-ms="16038" started-at="2020-05-05T12:12:32Z" finished-at="2020-05-05T12:12:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tilesVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="86" started-at="2020-05-05T12:12:48Z" finished-at="2020-05-05T12:12:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tilesVerification status=SUCCESS method=CallLogsTest.tilesVerification()[pri:5, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="totalCallsTileValueVerification()[pri:6, instance:tests.CallLogsTest@1e9e725a]" name="totalCallsTileValueVerification" duration-ms="6424" started-at="2020-05-05T12:12:48Z" finished-at="2020-05-05T12:12:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalCallsTileValueVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="77" started-at="2020-05-05T12:12:54Z" finished-at="2020-05-05T12:12:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=totalCallsTileValueVerification status=SUCCESS method=CallLogsTest.totalCallsTileValueVerification()[pri:6, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="uniqueCallsTileValueVerification()[pri:7, instance:tests.CallLogsTest@1e9e725a]" name="uniqueCallsTileValueVerification" duration-ms="6287" started-at="2020-05-05T12:12:54Z" finished-at="2020-05-05T12:13:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueCallsTileValueVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="59" started-at="2020-05-05T12:13:00Z" finished-at="2020-05-05T12:13:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=uniqueCallsTileValueVerification status=SUCCESS method=CallLogsTest.uniqueCallsTileValueVerification()[pri:7, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="answeredCallsTileValueVerification()[pri:8, instance:tests.CallLogsTest@1e9e725a]" name="answeredCallsTileValueVerification" duration-ms="6372" started-at="2020-05-05T12:13:00Z" finished-at="2020-05-05T12:13:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- answeredCallsTileValueVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="134" started-at="2020-05-05T12:13:07Z" finished-at="2020-05-05T12:13:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=answeredCallsTileValueVerification status=SUCCESS method=CallLogsTest.answeredCallsTileValueVerification()[pri:8, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="averageCallsDurationTileValueVerification()[pri:9, instance:tests.CallLogsTest@1e9e725a]" name="averageCallsDurationTileValueVerification" duration-ms="6298" started-at="2020-05-05T12:13:07Z" finished-at="2020-05-05T12:13:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- averageCallsDurationTileValueVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="75" started-at="2020-05-05T12:13:13Z" finished-at="2020-05-05T12:13:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=averageCallsDurationTileValueVerification status=SUCCESS method=CallLogsTest.averageCallsDurationTileValueVerification()[pri:9, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="totalLeadsTileValueVerification()[pri:10, instance:tests.CallLogsTest@1e9e725a]" name="totalLeadsTileValueVerification" duration-ms="6498" started-at="2020-05-05T12:13:13Z" finished-at="2020-05-05T12:13:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalLeadsTileValueVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="48" started-at="2020-05-05T12:13:20Z" finished-at="2020-05-05T12:13:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=totalLeadsTileValueVerification status=SUCCESS method=CallLogsTest.totalLeadsTileValueVerification()[pri:10, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="totalConversionTileValueVerification()[pri:11, instance:tests.CallLogsTest@1e9e725a]" name="totalConversionTileValueVerification" duration-ms="6279" started-at="2020-05-05T12:13:20Z" finished-at="2020-05-05T12:13:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalConversionTileValueVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="49" started-at="2020-05-05T12:13:26Z" finished-at="2020-05-05T12:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=totalConversionTileValueVerification status=SUCCESS method=CallLogsTest.totalConversionTileValueVerification()[pri:11, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="presenceOfTotalCallsGraph()[pri:12, instance:tests.CallLogsTest@1e9e725a]" name="presenceOfTotalCallsGraph" duration-ms="137" started-at="2020-05-05T12:13:26Z" finished-at="2020-05-05T12:13:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- presenceOfTotalCallsGraph -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="59" started-at="2020-05-05T12:13:26Z" finished-at="2020-05-05T12:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=presenceOfTotalCallsGraph status=SUCCESS method=CallLogsTest.presenceOfTotalCallsGraph()[pri:12, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="presenceOfUniqueCallsGraph()[pri:13, instance:tests.CallLogsTest@1e9e725a]" name="presenceOfUniqueCallsGraph" duration-ms="79" started-at="2020-05-05T12:13:26Z" finished-at="2020-05-05T12:13:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- presenceOfUniqueCallsGraph -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="74" started-at="2020-05-05T12:13:27Z" finished-at="2020-05-05T12:13:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=presenceOfUniqueCallsGraph status=SUCCESS method=CallLogsTest.presenceOfUniqueCallsGraph()[pri:13, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tableColumnsTest()[pri:14, instance:tests.CallLogsTest@1e9e725a]" name="tableColumnsTest" duration-ms="24547" started-at="2020-05-05T12:13:27Z" finished-at="2020-05-05T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableColumnsTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="58" started-at="2020-05-05T12:13:51Z" finished-at="2020-05-05T12:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tableColumnsTest status=SUCCESS method=CallLogsTest.tableColumnsTest()[pri:14, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="filterButtonTest()[pri:15, instance:tests.CallLogsTest@1e9e725a]" name="filterButtonTest" duration-ms="182" started-at="2020-05-05T12:13:51Z" finished-at="2020-05-05T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterButtonTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="65" started-at="2020-05-05T12:13:51Z" finished-at="2020-05-05T12:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterButtonTest status=SUCCESS method=CallLogsTest.filterButtonTest()[pri:15, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="filterButtonElementsTest()[pri:16, instance:tests.CallLogsTest@1e9e725a]" name="filterButtonElementsTest" duration-ms="25310" started-at="2020-05-05T12:13:51Z" finished-at="2020-05-05T12:14:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterButtonElementsTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="115" started-at="2020-05-05T12:14:17Z" finished-at="2020-05-05T12:14:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterButtonElementsTest status=SUCCESS method=CallLogsTest.filterButtonElementsTest()[pri:16, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="filterFeatureForGroupTest()[pri:17, instance:tests.CallLogsTest@1e9e725a]" name="filterFeatureForGroupTest" duration-ms="73476" started-at="2020-05-05T12:14:17Z" finished-at="2020-05-05T12:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterFeatureForGroupTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="50" started-at="2020-05-05T12:15:30Z" finished-at="2020-05-05T12:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterFeatureForGroupTest status=SUCCESS method=CallLogsTest.filterFeatureForGroupTest()[pri:17, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="filterFeatureForCampaignTest()[pri:18, instance:tests.CallLogsTest@1e9e725a]" name="filterFeatureForCampaignTest" duration-ms="70565" started-at="2020-05-05T12:15:30Z" finished-at="2020-05-05T12:16:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterFeatureForCampaignTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="47" started-at="2020-05-05T12:16:41Z" finished-at="2020-05-05T12:16:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterFeatureForCampaignTest status=SUCCESS method=CallLogsTest.filterFeatureForCampaignTest()[pri:18, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="footerNoteTest()[pri:19, instance:tests.CallLogsTest@1e9e725a]" name="footerNoteTest" duration-ms="139" started-at="2020-05-05T12:16:41Z" finished-at="2020-05-05T12:16:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerNoteTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="37" started-at="2020-05-05T12:16:41Z" finished-at="2020-05-05T12:16:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=footerNoteTest status=SUCCESS method=CallLogsTest.footerNoteTest()[pri:19, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="presenceOfDetailedViewTileTest()[pri:20, instance:tests.CallLogsTest@1e9e725a]" name="presenceOfDetailedViewTileTest" duration-ms="2117" started-at="2020-05-05T12:16:41Z" finished-at="2020-05-05T12:16:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- presenceOfDetailedViewTileTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="36" started-at="2020-05-05T12:16:43Z" finished-at="2020-05-05T12:16:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=presenceOfDetailedViewTileTest status=SUCCESS method=CallLogsTest.presenceOfDetailedViewTileTest()[pri:20, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="detailedViewUIVerificationTest()[pri:21, instance:tests.CallLogsTest@1e9e725a]" name="detailedViewUIVerificationTest" duration-ms="120097" started-at="2020-05-05T12:16:43Z" finished-at="2020-05-05T12:18:43Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //span[text()='Detailed View']//../..//preceding-sibling::div//a' (tried for 60 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //span[text()='Detailed View']//../..//preceding-sibling::div//a' (tried for 60 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:81)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at pom.CallLogsReportPage.detailedViewUIVerification(CallLogsReportPage.java:441)
	at tests.CallLogsTest.detailedViewUIVerificationTest(CallLogsTest.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()='Detailed View']//../..//preceding-sibling::div//a"}
  (Session info: chrome=81.0.4044.129)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 10.0.18362 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'LAPTOP-Q18VUQ5U', ip: '5.5.17.108', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\PREETI~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 81.0.4044.129, webStorageEnabled: true}
Session ID: 494ea19294dfbcc43240fcaa676095b6
*** Element info: {Using=xpath, value=//span[text()='Detailed View']//../..//preceding-sibling::div//a}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy16.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detailedViewUIVerificationTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="21724" started-at="2020-05-05T12:18:43Z" finished-at="2020-05-05T12:19:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=detailedViewUIVerificationTest status=FAILURE method=CallLogsTest.detailedViewUIVerificationTest()[pri:21, instance:tests.CallLogsTest@1e9e725a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="loggingOut()[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="loggingOut" is-config="true" duration-ms="6776" started-at="2020-05-05T12:19:05Z" finished-at="2020-05-05T12:19:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggingOut -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="tearDown" is-config="true" duration-ms="790" started-at="2020-05-05T12:19:12Z" finished-at="2020-05-05T12:19:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="close_connection()[pri:0, instance:tests.CallLogsTest@1e9e725a]" name="close_connection" is-config="true" duration-ms="7606" started-at="2020-05-05T12:19:13Z" finished-at="2020-05-05T12:19:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close_connection -->
      </class> <!-- tests.CallLogsTest -->
    </test> <!-- chrome test-1 -->
  </suite> <!-- Automation Suite-1 -->
</testng-results>
